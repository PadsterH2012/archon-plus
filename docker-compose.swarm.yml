version: '3.8'

services:
  # Server Service (FastAPI + Socket.IO + Crawling)
  archon-server:
    image: hl-harbor.techpad.uk/archon/archon-server:latest
    ports:
      - "8181:8181"
    environment:
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - LOGFIRE_TOKEN=${LOGFIRE_TOKEN:-}
      - SERVICE_DISCOVERY_MODE=docker_compose
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - HOST=0.0.0.0
      - ARCHON_SERVER_PORT=8181
      - ARCHON_MCP_PORT=8051
      - ARCHON_AGENTS_PORT=8052
      - ARCHON_UI_PORT=3737
      - ARCHON_EMBEDDINGS_PORT=11434
      - EMBEDDING_DIMENSIONS=768
      - EMBEDDING_MODEL_ID=nomic-embed-text
      - EMBEDDING_PROVIDER=ollama
      - EMBEDDING_BASE_URL=http://10.202.28.47:11434/v1
      - EMBEDDING_MODEL=nomic-embed-text
    networks:
      - app-network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8181/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Lightweight MCP Server Service (HTTP-based)
  archon-mcp:
    image: hl-harbor.techpad.uk/archon/archon-mcp:latest
    ports:
      - "8051:8051"
    environment:
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - LOGFIRE_TOKEN=${LOGFIRE_TOKEN:-}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    networks:
      - app-network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8051/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Agents Service (PydanticAI agents)
  archon-agents:
    image: hl-harbor.techpad.uk/archon/archon-agents:latest
    ports:
      - "8052:8052"
    environment:
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - LOGFIRE_TOKEN=${LOGFIRE_TOKEN:-}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    networks:
      - app-network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8052/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # UI Service (React + Vite)
  archon-ui:
    image: hl-harbor.techpad.uk/archon/archon-ui:latest
    ports:
      - "3737:5173"
    environment:
      - NODE_ENV=production
      - VITE_API_BASE_URL=http://localhost:8181
      - VITE_MCP_BASE_URL=http://localhost:8051
    networks:
      - app-network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5173"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Text Embeddings Service (Hugging Face TEI)
  archon-embeddings:
    image: ghcr.io/huggingface/text-embeddings-inference:cpu-1.8
    ports:
      - "8080:80"
    environment:
      - MODEL_ID=sentence-transformers/all-MiniLM-L6-v2
      - MAX_CONCURRENT_REQUESTS=512
      - MAX_BATCH_TOKENS=16384
      - MAX_BATCH_REQUESTS=32
    networks:
      - app-network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

networks:
  app-network:
    driver: overlay
    attachable: true

# Optional: Add volumes for persistent data if needed
volumes:
  archon_data:
    driver: local
